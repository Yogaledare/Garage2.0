@model HomeViewModel 


@{
    ViewData["Title"] = "Home Page";
}

@* <div class="container"> *@
<div>
    <h1 class="mb-3">Fancy Statistics</h1>
    <hr />
    <div class="row">
        <div class="col-lg-3">
            <div id="chartContainer" style="height: 370px; width: 100%;"></div>

        </div>

        <div class="col-lg-3">
            <div id="wheelsChartContainer" style="height: 370px; width: 100%;"></div>
        </div>


        <div class="col-lg-6">
            @* time plot should go here *@
            <div id="timePlotContainer" style="height: 370px; width: 100%;"></div>
        </div>

    </div>
</div>
@* </div> *@


@functions {
    private string PrepareChartData(IEnumerable<VehicleTypeSummary> summaries, Func<VehicleTypeSummary, int> valueSelector) {
        var dataPoints = summaries.Select(m => new {
            label = m.VehicleType.ToString(),
            y = valueSelector(m)
        });

        return System.Text.Json.JsonSerializer.Serialize(dataPoints);
    }
    
    private string PrepareTimePlotData(IEnumerable<AggregatedTimeEntry> timeEntries) {
        var result = timeEntries.OrderBy(t => t.TimeStamp).Select(entry => new {
            x = entry.TimeStamp,
            y = entry.VehicleCount
        });

        return System.Text.Json.JsonSerializer.Serialize(result);
    }
}



@section Scripts {
    <script src="~/js/charts.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const vehicleTypesData = @Html.Raw(PrepareChartData(Model.VehicleTypeSummaries, m => m.Count));
            const wheelsData = @Html.Raw(PrepareChartData(Model.VehicleTypeSummaries, m => m.TotalWheels));
            const timePlotData = @Html.Raw(PrepareTimePlotData(Model.TimeEntries));

            setupDoughnutCharts(vehicleTypesData, wheelsData);
            createTimePlotChart("timePlotContainer", timePlotData);
        });
    </script>
}

